priority -50

snippet patch "Patch prepare" i
prepare() {
    cd "$pkgname-$pkgver"
    patch -Np1 -i "${srcdir}/$1"
}
endsnippet

snippet prepare "Prepare" i
prepare() {
    cd "${pkgname}-${pkgver}"
	$1
}
endsnippet

snippet build "Build" i
build() {
    cd "${pkgname}-${pkgver}"
	$1
}
endsnippet


snippet package "Package" i
package() {
    cd "${pkgname}-${pkgver}"
	$1
}
endsnippet

snippet main "Maintainer tag" i
`#!/usr/bin/bash
main=$(cat /etc/makepkg.conf ~/.makepkg.conf $XDG_CONFIG_HOME/pacman/makepkg.conf 2>/dev/null | grep -oP '^PACKAGER="\K[^"]+')
echo "# Maintainer:" $main
`
endsnippet

snippet base "Metadata" i
pkgname=$1
pkgver=$2
pkgrel=${3:1}
pkgdesc="$4"
arch=(${5:"any"})
url="$6"
license=("$7")
depends=($8)
makedepends=($8)
optdepends=($9)
source=($10)
validpgpkeys=($12)
sha256sums=($13)
endsnippet


snippet python "Python base" i
build() {
	cd "${pkgname}-${pkgver}"
	python setup.py build
}

package() {
	cd "${pkgname}-${pkgver}"
	python setup.py install --root="${pkgdir}/" --optimize=1 --skip-build
}
endsnippet

snippet make "Makefile base" i
endsnippet

snippet go "Golang base" i
endsnippet

snippet lisence "Lisence" i
install -mD0644 ${1:LICENSE} "${pkgdir}/usr/share/licenses/${pkgname}/$1"
endsnippet

snippet pkgver "Package version function" i
pkgver() {
    cd $pkgname

    git describe --long --tags | sed -r 's/^v//; s/([^-]*-g)/r\1/; s/-/./g'

    _tag=$(git tag --sort=v:refname | sed -n '$p')
    printf '%s.r%s.g%s' "${_tag#v}" "$(git rev-list "$_tag"..HEAD --count)" "$(git rev-parse --short HEAD)"

    printf 'r%s.g%s' "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"

    hg tip --template '{latesttag}.r{latesttagdistance}.{node|short}'

    hg tip --template 'r{rev}.{node|short}'

    printf 'r%s' "$(bzr revno)"
    
    printf 'r%s' "$(svnversion)"
}
endsnippet
